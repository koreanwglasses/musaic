{"version":3,"sources":["webpack://Musaic/webpack/bootstrap","webpack://Musaic/./src/components/VoronoiMosaic.tsx","webpack://Musaic/./src/core/HashSet.ts","webpack://Musaic/./src/core/Mosaic.ts","webpack://Musaic/./src/core/Observable.ts","webpack://Musaic/./src/core/Pixel.ts","webpack://Musaic/./src/core/SimpleMosaic.ts","webpack://Musaic/./src/index.tsx","webpack://Musaic/./src/three/VoronoiHelper.ts","webpack://Musaic/external \"React\"","webpack://Musaic/external \"ReactDOM\"","webpack://Musaic/external \"THREE\""],"names":[],"mappings":"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","file":"musaic.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.tsx\");\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { Color, Point, Pixel } from '../core/Pixel';\nimport { Mosaic } from '../core/Mosaic';\nimport { Observer } from '../core/Observable';\nimport { VoronoiHelper } from '../three/VoronoiHelper';\nimport { Vector2 } from 'three';\n\nexport class VoronoiMosaic extends React.Component<any, any> implements Observer {\n    private mosaic: Mosaic;\n    private scale: number;\n    \n    private renderer: THREE.WebGLRenderer;\n    private scene: THREE.Scene;\n    private camera: THREE.Camera;\n\n    private offsets: Array<Array<THREE.Vector2>>;\n    \n    constructor(props: any) {\n        super(props);\n        this.mosaic = this.props.mosaic;\n        if(!this.mosaic) {\n            throw new Error(\"Mosaic not defined in props!\");\n        }\n        \n        this.scale = this.props.scale || 1;\n        (this.mosaic as Mosaic).addObserver(this);\n    }\n    \n    componentDidMount() {\n        this.init();        \n        this.updateCanvas();\n    }\n    \n    init() {\n        const container = (this.refs.container as HTMLDivElement);\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(this.mosaic.getWidth()*this.scale, this.mosaic.getHeight()*this.scale);\n        container.appendChild(this.renderer.domElement);\n        \n        this.scene = new THREE.Scene();\n        \n        this.camera = new THREE.OrthographicCamera(0, this.mosaic.getWidth(), 0, -this.mosaic.getHeight(), 0, 1000);\n        this.camera.position.y = 10;\n        this.camera.lookAt(0, 0, 0);\n\n        this.offsets = new Array<Array<THREE.Vector2>>();\n        for(let i = 0; i < this.mosaic.getHeight(); i++) {\n            this.offsets[i] = new Array<THREE.Vector2>();\n        }\n    }\n    \n    updateCanvas() {\n        while(this.scene.children.length > 0){ \n            this.scene.remove(this.scene.children[0]); \n        }\n        \n        let pixels = new Array<Pixel>();\n        \n        for(let i = 0; i < this.mosaic.getHeight(); i++) {\n            for(let j = 0; j < this.mosaic.getWidth(); j++) {\n                let color = this.mosaic.getColorAt(j, i);\n                if(!color.equals(new Color())) {\n                    let pixel = new Pixel(new Point(j, i), color);\n                    pixels.push(pixel);\n                    \n                    if(!this.offsets[i][j]) {\n                        let ox = 0.8 * (Math.random() - 0.5);\n                        let oy = 0.8 * (Math.random() - 0.5);\n                        this.offsets[i][j] = new Vector2(ox, oy);\n                    }\n                }\n            }\n        } \n        \n        let mesh = new VoronoiHelper(pixels, this.offsets);\n        this.scene.add( mesh );\n        \n        this.renderer.render(this.scene, this.camera);\n    }\n    \n    \n    render() {\n        return <div ref=\"container\" />;\n    }\n    \n    update() {\n        this.updateCanvas();\n    }\n}","import { string } from \"prop-types\";\n\nexport interface Hashable {\n    /**\n    * Indicates whether some other object is \"equal to\" this one.\n    * @param {any} obj the reference object with which to compare.\n    * @returns {boolean} true if this object is the same as the obj argument; false\n    * otherwise.\n    */\n    equals(obj: any): boolean;\n    \n    /**\n    * Returns a hash code value for the object. This method is supported for the\n    * benefit of hash tables such as those provided by HashSet.\n    * @returns {string} a hash code value for this object.\n    */\n    hashString(): string;\n}\n\nexport class HashSet<T extends Hashable> implements Iterable<T> {\n    private map: Map<String, Array<T>>;\n    \n    /**\n    * The Set object lets you store unique values of any hashable type.\n    * @param {Iterable<T>} iterable If an iterable object is passed, all of its\n    * elements will be added to the new Set. If you don't specify this parameter,\n    * or its value is null, the new Set is empty.\n    * @returns {HashSet<T>} A new Set object\n    */\n    public constructor(iterable?: Iterable<T>) {\n        this.map = new Map<String, Array<T>>();\n        if(iterable) {\n            for(let value of iterable) {\n                this.add(value);\n            }\n        }\n    }\n    \n    /**\n    * Appends a new element with a specified value to the end of this Set.\n    * @param {T} value Required. The value of the element to add to this Set.\n    * @returns {HashSet} The Set object.\n    */\n    public add(value: T): HashSet<T> {\n        if(!this.has(value)) {\n            let hashString = value.hashString();\n            let bucket = this.map.get(hashString);\n            if(!bucket) {\n                this.map.set(hashString, [value]);\n            } else {\n                bucket.push(value);\n            }\n        }\n        return this;\n    }\n\n    /**\n    * Appends the new elements with a specified values to the end of this Set.\n    * @param {T} value Required. The value of the element to add to this Set.\n    * @returns {HashSet} The Set object.\n    */\n    public addAll(values: Iterable<T>): HashSet<T> {\n        for(let value of values) {\n            this.add(value);\n        }\n        return this;\n    }\n    \n    /**\n    * Removes all elements from this Set.\n    */\n    public clear(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    \n    /**\n    * Removes the specified element from this Set.\n    * @param {T} value Required. The value of the element to remove from the Set\n    * object.\n    * @returns {boolean} true if an element in the Set object has been removed successfully;\n    * otherwise false.\n    */\n    public delete(value: T): boolean {\n        if(this.has(value)) {\n            let hashString = value.hashString();\n            let bucket = this.map.get(hashString);\n\n            if(bucket.length == 1) {\n                this.map.delete(hashString);\n            }\n\n            let index = bucket.findIndex((item) => {\n                return value.equals(item);\n            });\n            bucket.splice(index, 1);\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    /**\n    * Returns a new Iterator object that contains an array of [value, value] for\n    * each element in this Set, in insertion order. For Set objects there is no\n    * key like in Map objects. However, to keep the API similar to the Map object,\n    * each entry has the same value for its key and value here, so that an array \n    * [value, value] is returned.\n    * @returns {Iterator<Array<T>>} A new Iterator object that contains an array of [value, value] for\n    * each element in this Set, in insertion order.\n    */\n    public entries(): Iterator<Array<T>> {\n        throw new Error(\"Method not implemented.\");\n    }\n    \n    /**\n    * Executes a provided function once for each value in this Set, in insertion\n    * order.\n    * @param {(value1: T, value2: T, Set: HashSet<T>) => void} callback Function\n    * to execute for each element. \n    * \n    *     value1, value2\n    * \n    * The value contained in the the current position in this Set. The same value\n    * is passed for both arguments.\n    * \n    *     Set\n    * \n    * The Set object that's being traversed.\n    * @param {any?} thisArg Value to use as this when executing callback.\n    */\n    public forEach(callback: (value1: T, value2: T, Set: HashSet<T>) => void, thisArg?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    \n    /**\n    * Returns a boolean indicating whether an element with the specified value\n    * exists in a Set object or not.\n    * @param {T} value Required. The value to test for presence in this Set.\n    * @returns {boolean} Returns true if an element with the specified value exists in the Set object; otherwise false.\n    */\n    public has(value: T): boolean {\n        let bucket = this.map.get(value.hashString());\n        if(!bucket) { \n            return false;\n        } else if(bucket.length == 1) {\n            return true;\n        }\n        else {\n            for(let item of bucket) {\n                if(value.equals(item)) return true;\n            }\n            return false;\n        }\n    }\n    \n    /**\n    * The values() method returns a new Iterator object that contains the values\n    * for each element in this Set object in no particular order. \n    * \n    * The keys() method is an alias for this method (for similarity with Map objects);\n    * it behaves exactly the same and returns values of Set elements.\n    * @returns {Iterator<T>} A new Iterator object containing the values for each\n    * element in this Set, in no particular order.\n    */\n    public keys(): Iterator<T> {\n        return this.values();\n    }\n    \n    /**\n    * The keys() method returns a new Iterator object that contains the values\n    * for each element in this Set object in no particular order.\n    * \n    * The values() method is an alias for this method (for similarity with Map objects);\n    * it behaves exactly the same and returns values of Set elements.\n    * @returns {Iterator<T>} A new Iterator object containing the values for each\n    * element in this Set, in no particular order. \n    */\n    public values(): Iterator<T> {\n        let allValues = new Array<T>();\n        for(let entry of this.map) {\n            for(let value of entry[1]) {\n                allValues.push(value);\n            }\n        }\n        return allValues.values();\n    }\n    \n    /**\n    * The initial value of the @@iterator property is the same function object\n    * as the initial value of the values property. \n    * @returns {Iterator<T>} The Set iterator function, which is the values()\n    * function by default. \n    */\n    [Symbol.iterator](): Iterator<T> {\n        return this.values();\n    }\n}","import { Color } from './Pixel';\nimport { Observable } from './Observable';\n\nexport abstract class Mosaic extends Observable {\n    private width: number;\n    private height: number;\n\n    /**\n     * Construct an empty mosaic with given height and width in pixels\n     * @param width width in pixels\n     * @param height height in pixels\n     */\n    public constructor(width: number, height: number) {\n        super();\n        this.width = width;\n        this.height = height;\n    }\n\n    /**\n     * Add a pixel with this color to the mosaic. Also sets changed to true if the\n     * pixel was added successfully.\n     * @param tile Color of the pixel to add\n     * @returns true if the pixel was added successfully. False otherwise.\n     */\n    abstract addTile(tile: Color): boolean;\n    abstract getColorAt(x: number, y: number): Color;\n\n    /**\n     * @returns The width in pixels\n     */\n    public getWidth(): number {\n        return this.width;\n    }\n\n    /**\n     * @returns The width in pixels\n     */\n    public getHeight(): number {\n        return this.height;\n    }\n}","export interface Observer {\n    update(o: Observable, arg: any): void;\n}\n\nexport class Observable {\n    private observers: Set<Observer>;\n    private isChanged: boolean;\n\n    /**\n     * Construct an Observable with zero Observers.\n     */\n    public constructor() {\n        this.observers = new Set<Observer>();\n    }\n\n    /**\n     * Adds an observer to the set of observers for this object, provided that \n     * it is not the same as some observer already in the set.\n     * @param o an observer to be added. \n     */\n    public addObserver(o: Observer): void {\n        this.observers.add(o);\n    }\n\n    /**\n     * Tests if this object has changed.\n     * @returns true if and only if the setChanged method has been called more \n     * recently than the clearChanged method on this object; false otherwise.\n     */\n    public hasChanged(): boolean {\n        return this.isChanged;\n    }\n\n    /**\n     * Marks this Observable object as having been changed; the hasChanged method\n     * will now return true.\n     */\n    protected setChanged(): void {\n        this.isChanged = true;\n    }\n\n    /**\n     * Indicates that this object has no longer changed, or that it has already \n     * notified all of its observers of its most recent change, so that the hasChanged\n     * method will now return false. This method is called automatically by the\n     * notifyObservers methods.\n     */\n    protected clearChanged(): void {\n        this.isChanged = false;\n    }\n\n    /**\n     * If this object has changed, as indicated by the hasChanged method, then notify\n     * all of its observers and then call the clearChanged method to indicate that\n     * this object has no longer changed.\n     * \n     * Each observer has its update method called with two arguments: this observable\n     * object and the arg argument.\n     * @param arg any object.\n     */\n    public notifyObservers(arg?: any): void {\n        for(let observer of this.observers) {\n            observer.update(this, arg);\n        }\n        this.clearChanged();\n    }\n\n}","import { Hashable } from './HashSet';\n\n/**\n * Represents an RGBA color\n */\nexport class Color implements Hashable {\n    private r: number;\n    private g: number;\n    private b: number;\n    private a: number;\n\n    /**\n     * Constructs an RGBA color object.\n     * @param {number?} r An integer in the range [0, 255]\n     * @param {number?} g An integer in the range [0, 255]\n     * @param {number?} b An integer in the range [0, 255]\n     * @param {number?} a A float in the range [0, 1] \n     */\n    public constructor(r?: number, g?: number, b?: number, a?: number) {\n        this.r = r || 0;\n        this.g = g || 0;\n        this.b = b || 0;\n        this.a = a || 1;\n    }\n\n    public getR(): number {\n        return this.r;\n    }\n\n    public getG(): number {\n        return this.g;\n    }\n\n    public getB(): number {\n        return this.b;\n    }\n\n    public getA(): number {\n        return this.a;\n    }\n\n    /**\n     * Gets the color as a string of the form rgba(r,g,b,a)\n     */\n    public getRgba(): string {\n        return 'rgba(' + this.r + ',' + this.b + ',' + this.g + ',' + this.a + ')';\n    }\n\n    public equals(obj: any): boolean {\n        if(!(obj instanceof Color)) {\n            return false;\n        }\n        return this.r == obj.r && this.g == obj.g && this.b == obj.b && this.a == obj.a;\n    }\n\n    public hashString(): string {\n        return this.r + ',' + this.g + ',' + this.b + ',' + this.a;\n    }\n}\n\n/**\n * Represents a point on the screen\n */\nexport class Point implements Hashable{\n    private x: number;\n    private y: number;\n   \n    /**\n     * Constructs a point object\n     * @param {number?} x An integer\n     * @param {number?} y An integer\n     */\n    public constructor(x?: number, y?: number) {\n        this.x = x || 0;\n        this.y = y || 0;\n    }\n\n    public getX(): number {\n        return this.x;\n    }\n\n    public getY(): number {\n        return this.y;\n    }\n\n    public equals(obj: any): boolean {\n        if(!(obj instanceof Point)) {\n            return false;\n        }\n        return this.x == obj.x && this.y == obj.y;\n    }\n\n    public hashString(): string {\n        return this.x + ',' + this.y;\n    }\n}\n\nexport class Pixel {\n    private position: Point;\n    private color: Color;\n\n    public constructor(position: Point, color: Color) {\n        this.position = position;\n        this.color = color;\n    }\n\n    public getPosition(): Point {\n        return this.position;\n    }\n\n    public getColor(): Color {\n        return this.color;\n    }\n}","import { Color, Point } from './Pixel';\nimport { HashSet } from './HashSet';\nimport { Mosaic } from './Mosaic';\n\nexport class SimpleMosaic extends Mosaic {\n    private grid: Array<Array<Color>>\n    private boundary: HashSet<Point>;\n    \n    public constructor(width: number, height: number) {\n        super(width, height);\n\n        this.grid = new Array<Array<Color>>();\n        for(let i = 0; i < height; i++) {\n            this.grid[i] = new Array<Color>();\n            for(let j = 0; j < width; j++) {\n                this.grid[i][j] = new Color();\n            }\n        }\n        \n        this.boundary = new HashSet<Point>();\n\n        this.boundary.add(new Point(Math.floor(width/2), Math.floor(height/2)));\n        // this.boundary.add(new Point(0, 0));\n        // this.boundary.add(new Point(0, height - 1));\n        // this.boundary.add(new Point(width - 1, 0));\n        // this.boundary.add(new Point(width - 1, height - 1));\n    }\n    \n    public addTile(color: Color): boolean {\n        let self_ = this;\n        function neighborsOf(x: number, y: number): Array<Point> {\n            let neighbors = new Array<Point>();\n            neighbors.push(new Point(x-1, y-1));\n            neighbors.push(new Point(x-1, y));\n            neighbors.push(new Point(x-1, y+1));\n            neighbors.push(new Point(x, y-1));\n            neighbors.push(new Point(x, y+1));\n            neighbors.push(new Point(x+1, y-1));\n            neighbors.push(new Point(x+1, y));\n            neighbors.push(new Point(x+1, y+1));\n            \n            return neighbors.filter((value) => {\n                return 0 <= value.getX() && value.getX() < self_.getWidth() && 0 <= value.getY() && value.getY() < self_.getHeight(); \n            });\n        }\n        \n        function colorDistance(color1: Color, color2: Color): number {\n            return Math.pow(color1.getR() - color2.getR(), 2) + Math.pow(color1.getG() - color2.getG(), 2)\n            + Math.pow(color1.getB() - color2.getB(), 2)\n        }\n        \n        function similarity(x: number, y: number): number {\n            let distances = neighborsOf(x, y).filter((value) => {\n                return !self_.getColorAt(value.getX(), value.getY()).equals(new Color());\n            }).map((value) => {\n                return colorDistance(color, self_.getColorAt(value.getX(), value.getY()));\n            });\n            if(distances.length == 0) return 0;\n            else return Math.min(...distances);\n        }\n        \n        function findBestPoint(): Point {\n            let minSimilarity = Number.POSITIVE_INFINITY;\n            let bestPoint: Point;\n            for(let point of self_.boundary) {\n                let sim = similarity(point.getX(), point.getY());\n                if(sim < minSimilarity) {\n                    minSimilarity = sim;\n                    bestPoint = point;\n                }\n            }\n            return bestPoint;\n        }\n\n        function updateBoundary(point: Point) {\n            self_.boundary.delete(point);\n            let newBoundary = neighborsOf(point.getX(), point.getY()).filter((value) => {\n                return self_.getColorAt(value.getX(), value.getY()).equals(new Color());\n            });\n            self_.boundary.addAll(newBoundary);\n        }\n        \n        let bestPoint = findBestPoint();\n        if(!bestPoint) return false;\n        updateBoundary(bestPoint);\n        this.grid[bestPoint.getY()][bestPoint.getX()] = color;\n        this.setChanged();\n        return true;\n    }\n    \n    public getColorAt(x: number, y: number): Color {\n        return this.grid[y][x];\n    }\n}","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { PixelMosaic } from './components/PixelMosaic';\nimport { VoronoiMosaic } from './components/VoronoiMosaic';\nimport { SimpleMosaic } from './core/SimpleMosaic';\nimport { Color } from './core/Pixel';\n\nlet mosaic = new SimpleMosaic(100, 100);\nlet view = <VoronoiMosaic mosaic={mosaic} scale={5} />;\n\nReactDOM.render(view, document.getElementById('root'));\n\nfunction addRandomTiles(n: number): boolean {\n    if(n == 1) {\n        let r = Math.floor(Math.random() * 255);\n        let g = Math.floor(Math.random() * 255);\n        let b = Math.floor(Math.random() * 255);\n        let a = Math.random();\n        let color = new Color(r, g, b, a);\n\n        return mosaic.addTile(color);\n    } else {\n        for(let i = 0; i < n; i++) {\n            if(!addRandomTiles(1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction animate() {\n    if(addRandomTiles(10)) {\n        mosaic.notifyObservers();\n        requestAnimationFrame(animate);\n    }\n}\n\nanimate()\n","import * as THREE from 'three';\nimport { Pixel } from '../core/Pixel';\n\nexport class VoronoiHelper extends THREE.Object3D {\n    public constructor(pixels: Array<Pixel>, offsets: Array<Array<THREE.Vector2>>, radius?: number, segments?: number) {\n        super();\n        var instances = pixels.length;\n        var radius_ = radius || 1;\n        var segments_ = segments || 16;\n        \n        var offsets_ = [];\n        var colors = [];\n        \n        // instanced attributes\n        for ( var i = 0; i < instances; i ++ ) {\n            // offsets\n            let x = pixels[i].getPosition().getX();\n            let y = pixels[i].getPosition().getY();\n            offsets_.push( x + offsets[y][x].x, 0, y + offsets[y][x].y );\n            // colors\n            colors.push( pixels[i].getColor().getR() / 255.0,\n            pixels[i].getColor().getG() / 255.0,\n            pixels[i].getColor().getB() / 255.0, 1.0 );\n        }\n        \n        var coneGeometry = new THREE.ConeBufferGeometry(radius_, radius_ * 2, segments_);\n        \n        var geometry = new THREE.InstancedBufferGeometry();\n        geometry.index = coneGeometry.index;\n        geometry.attributes = coneGeometry.attributes;\n        geometry.maxInstancedCount = instances; \n        geometry.addAttribute( 'offset', new THREE.InstancedBufferAttribute( new Float32Array( offsets_ ), 3 ) );\n        geometry.addAttribute( 'color', new THREE.InstancedBufferAttribute( new Float32Array( colors ), 4 ) );\n        \n        var material = new THREE.RawShaderMaterial( {\n            vertexShader: VoronoiHelper.vertexShader,\n            fragmentShader: VoronoiHelper.fragmentShader,\n        } );\n        \n        var mesh = new THREE.Mesh( geometry, material );\n\n        this.add(mesh);\n    }\n    \n    private static readonly vertexShader = `\n    precision highp float;\n    \n    uniform float sineTime;\n    \n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    \n    attribute vec3 position;\n    attribute vec3 offset;\n    attribute vec4 color;\n    \n    varying vec3 vPosition;\n    varying vec4 vColor;\n    \n    void main(){\n        vPosition = offset + position;\n        vColor = color;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( vPosition, 1.0 );\n    } \n    `;\n    \n    private static readonly fragmentShader = `\n    precision highp float;\n    \n    varying vec4 vColor;\n    \n    void main() {\n        gl_FragColor = vColor;\n    }\n    `;\n}","module.exports = React;","module.exports = ReactDOM;","module.exports = THREE;"],"sourceRoot":""}