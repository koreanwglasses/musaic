{"version":3,"sources":["webpack://Musaic/webpack/bootstrap","webpack://Musaic/./src/components/VoronoiView.tsx","webpack://Musaic/./src/controllers/SimpleAnimationController.tsx","webpack://Musaic/./src/core/HashMap.ts","webpack://Musaic/./src/core/HashSet.ts","webpack://Musaic/./src/core/Mosaic.ts","webpack://Musaic/./src/core/Observable.ts","webpack://Musaic/./src/core/Pixel.ts","webpack://Musaic/./src/core/SimpleMosaic.ts","webpack://Musaic/./src/core/SimpleSquareMosaic.ts","webpack://Musaic/./src/core/SquareGrid.ts","webpack://Musaic/./src/index.tsx","webpack://Musaic/./src/three/VoronoiHelper.ts","webpack://Musaic/external \"React\"","webpack://Musaic/external \"ReactDOM\"","webpack://Musaic/external \"THREE\""],"names":[],"mappings":"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","file":"musaic.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.tsx\");\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { Color, Point, Pixel } from '../core/Pixel';\nimport { Mosaic } from '../core/Mosaic';\nimport { Observer } from '../core/Observable';\nimport { VoronoiHelper } from '../three/VoronoiHelper';\nimport { Vector2, Vector } from 'three';\nimport { HashMap } from '../core/HashMap';\n\nexport class VoronoiView extends React.Component<any, any> implements Observer {\n    private mosaic: Mosaic;\n    private scale: number;\n    \n    private renderer: THREE.WebGLRenderer;\n    private scene: THREE.Scene;\n    private camera: THREE.Camera;\n    \n    private offsets: HashMap<Point, Vector2>;\n    \n    constructor(props: any) {\n        super(props);\n        this.mosaic = this.props.mosaic;\n        if(!this.mosaic) {\n            throw new Error(\"Mosaic not defined in props!\");\n        }\n        \n        this.scale = this.props.scale || 1;\n        (this.mosaic as Mosaic).addObserver(this);\n    }\n    \n    componentDidMount() {\n        this.init();        \n        this.updateCanvas();\n    }\n    \n    init() {\n        const container = (this.refs.container as HTMLDivElement);\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(this.mosaic.getWidth()*this.scale, this.mosaic.getHeight()*this.scale);\n        container.appendChild(this.renderer.domElement);\n        \n        this.scene = new THREE.Scene();\n        \n        this.camera = new THREE.OrthographicCamera(0, this.mosaic.getWidth(), 0, -this.mosaic.getHeight(), 0, 1000);\n        this.camera.position.y = 10;\n        this.camera.lookAt(0, 0, 0);\n        \n        this.offsets = new HashMap<Point, Vector2>(); \n    }\n    \n    updateCanvas() {\n        while(this.scene.children.length > 0){ \n            this.scene.remove(this.scene.children[0]); \n        }\n        \n        let pixels = new Array<Pixel>();\n        \n        for(let point of this.mosaic.allPoints()) { \n            let x = point.getX();\n            let y = point.getY();\n            let color;\n            if(this.mosaic.isOnBoundary(x, y)) {\n                color = new Color(0, 0, 0, 1);\n            } else {\n                color = this.mosaic.getColorAt(x, y);\n            }\n            \n            if(this.mosaic.isOnBoundary(x, y) || this.mosaic.isSet(x, y)) {\n                let pixel = new Pixel(point, color);\n                pixels.push(pixel);\n                \n                if(!this.offsets.has(point)) {\n                    let ox = 0.8 * (Math.random() - 0.5);\n                    let oy = 0.8 * (Math.random() - 0.5);\n                    this.offsets.set(point, new Vector2(ox, oy));\n                }\n            }\n        }\n        \n        let mesh = new VoronoiHelper(pixels, this.offsets, 2);\n        this.scene.add( mesh );\n        \n        this.renderer.render(this.scene, this.camera);\n    }\n    \n    \n    render() {\n        return <div ref=\"container\" />;\n    }\n    \n    update() {\n        this.updateCanvas();\n    }\n}","\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { PixelView } from '../components/PixelView';\nimport { VoronoiView } from '../components/VoronoiView';\nimport { SimpleSquareMosaic } from '../core/SimpleSquareMosaic';\nimport { SimpleTriMosaic } from '../core/SimpleTriMosaic';\nimport { Color } from '../core/Pixel';\nimport { Mosaic } from '../core/Mosaic';\n\nexport class SimpleAnimationController {\n    private mosaic: Mosaic;\n    private view: JSX.Element;\n    \n    public constructor(mosaic?: Mosaic, view?: JSX.Element) {\n        this.mosaic = mosaic !== undefined ? mosaic : new SimpleSquareMosaic(100, 100);\n        this.view = view !== undefined ? view : <VoronoiView mosaic={this.mosaic} scale={5} />;\n    }\n    \n    public init(): void {\n        ReactDOM.render(this.view, document.getElementById('root'));\n    }\n    \n    public start(): void {        \n        let self_ = this;\n        function addRandomTiles(n: number): boolean {\n            if(n == 1) {\n                let r = Math.floor(Math.random() * 255);\n                let g = Math.floor(Math.random() * 255);\n                let b = Math.floor(Math.random() * 255);\n                let color = new Color(r, g, b);\n                \n                return self_.mosaic.addTile(color);\n            } else {\n                for(let i = 0; i < n; i++) {\n                    if(!addRandomTiles(1)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        \n        function animate() {\n            let result = addRandomTiles(10);\n            self_.mosaic.notifyObservers();\n            if(result) {\n                requestAnimationFrame(animate);\n            }\n        }\n        \n        animate()\n    }\n}","export interface Hashable {\n    /**\n    * Indicates whether some other object is \"equal to\" this one.\n    * @param {any} obj the reference object with which to compare.\n    * @returns {boolean} true if this object is the same as the obj argument; false\n    * otherwise.\n    */\n    equals(obj: any): boolean;\n    \n    /**\n    * Returns a hash code value for the object. This method is supported for the\n    * benefit of hash tables such as those provided by HashSet.\n    * @returns {string} a hash code value for this object.\n    */\n    hashString(): string;\n}\n\nexport class HashMap<K extends Hashable, V> implements Iterable<[K, V]> {\n    private map: Map<String, Array<[K, V]>>;\n    \n    /**\n    * The Map object holds key-value pairs and remembers the original insertion order of the keys. Any value (both objects and primitive values) may be used as either a key or a value.\n    * @param {Iterable<[K, V]>} iterable An Array or other iterable object whose elements are key-value pairs (arrays with two elements, e.g. [[ 1, 'one' ],[ 2, 'two' ]]). Each key-value pair is added to the new Map; null values are treated as undefined.\n    */\n    public constructor(iterable?: Iterable<[K, V]>) {\n        this.map = new Map<String, Array<[K, V]>>();\n        if(iterable) {\n            for(let entry of iterable) {\n                this.set(entry[0], entry[1]);\n            }\n        }\n    }\n    \n    /**\n    * The clear() method removes all elements from a Map object. \n    */\n    public clear(): void {\n        this.map = new Map<String, Array<[K, V]>>();\n    }\n    \n    /**\n    * The delete() method removes the specified element from a Map object.\n    * @param {K} key The key of the element to remove from the Map object.\n    * @returns {boolean} true if an element in the Map object existed and has been removed, or false if the element does not exist.\n    */\n    public delete(key: K): boolean {\n        if(this.has(key)) {\n            let hashString = key.hashString();\n            let bucket = this.map.get(hashString);\n            \n            if(bucket.length == 1) {\n                this.map.delete(hashString);\n            }\n            \n            let index = bucket.findIndex((item) => {\n                return key.equals(item);\n            });\n            bucket.splice(index, 1);\n            \n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    /**\n    * The entries() method returns a new Iterator object that contains the [key, value] pairs for each element in the Map object in insertion order. \n    * @returns {Iterator<[K, V]>} A new Map iterator object.\n    */\n    public entries(): Iterator<[K, V]> {\n        let allValues = new Array<[K, V]>();\n        for(let entry of this.map) {\n            for(let kv of entry[1]) {\n                allValues.push(kv);\n            }\n        }\n        return allValues.values();\n    }\n    \n    /**\n    * The forEach() method executes a provided function once per each key/value pair in the Map object, in no particular order.\n    * @param {(value: V, key: K, map: HashMap<K, V>) => void} callback Function to execute for each element.\n    * @param {any?} thisArg Value to use as this when executing callback.\n    */\n    public forEach(callback: (value: V, key: K, map: HashMap<K, V>) => void, thisArg?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    \n    /**\n    * The get() method returns a specified element from a Map object.\n    * @param {K} key Required. The key of the element to return from the Map object.\n    * @returns {V} Returns the element associated with the specified key or undefined if the key can't be found in the Map object.\n    */\n    public get(key: K): V {\n        let bucket = this.map.get(key.hashString());\n        if(!bucket) { \n            return undefined;\n        } else {\n            for(let item of bucket) {\n                if(key.equals(item[0])) return item[1];\n            }\n            return undefined;\n        }\n    }    \n    \n    /**\n    * The has() method returns a boolean indicating whether an element with the specified key exists or not. \n    * @param {K} key Required. The key of the element to test for presence in the Map object. \n    * @returns {boolean} Returns true if an element with the specified key exists in the Map object; otherwise false.\n    */\n    public has(key: K): boolean {\n        return this.get(key) !== undefined; \n    }\n    \n    /**\n    * The keys() method returns a new Iterator object that contains the keys for each element in the Map object in no particular order.\n    * @returns {K} A new Map iterator object.\n    */ \n    public keys(): Iterator<K> {\n        let keysArray = new Array<K>();\n        for(let entry of this) {\n            keysArray.push(entry[0]);\n        }\n        return keysArray.values();\n    }\n    \n    /**\n    * The set() method adds or updates an element with a specified key and value to a Map object. \n    * @param {K} key The key of the element to add to the Map object.\n    * @param {V} value The value of the element to add to the Map object.\n    * @returns The Map object.\n    */\n    public set(key: K, value: V): HashMap<K, V> {\n        if(this.has(key)) this.delete(key);\n\n        let hashString = key.hashString();\n        let bucket = this.map.get(hashString);\n        if(!bucket) {\n            this.map.set(hashString, [[key, value]]);\n        } else {\n            bucket.push([key, value]);\n        }\n        return this;\n    }\n    \n    /**\n    * The values() method returns a new Iterator object that contains the values for each element in the Map object in no particular order.\n    * @returns {Iterator<V>} A new Map iterator object\n    */\n    public values(): Iterator<V> {\n        let valuesArray = new Array<V>();\n        for(let entry of this) {\n            valuesArray.push(entry[1]);\n        }\n        return valuesArray.values();\n    }\n    \n    /**\n    * The initial value of the @@iterator property is the same function object as the initial value of the entries method.\n    * @returns The map iterator function, which is the entries() function by default.\n    */\n    [Symbol.iterator](): Iterator<[K, V]> {\n        return this.entries();\n    }\n}","import { Hashable, HashMap } from './HashMap';\n\nexport class HashSet<T extends Hashable> implements Iterable<T> {\n    private map: HashMap<T, T>;\n    \n    /**\n    * The Set object lets you store unique values of any hashable type.\n    * @param {Iterable<T>} iterable If an iterable object is passed, all of its\n    * elements will be added to the new Set. If you don't specify this parameter,\n    * or its value is null, the new Set is empty.\n    * @returns {HashSet<T>} A new Set object\n    */\n    public constructor(iterable?: Iterable<T>) {\n        this.map = new HashMap<T, T>();\n        if(iterable) {\n            for(let value of iterable) {\n                this.add(value);\n            }\n        }\n    }\n    \n    /**\n    * Appends a new element with a specified value to the end of this Set.\n    * @param {T} value Required. The value of the element to add to this Set.\n    * @returns {HashSet} The Set object.\n    */\n    public add(value: T): HashSet<T> {\n        this.map.set(value, value); \n        return this;\n    }\n\n    /**\n    * Appends the new elements with a specified values to the end of this Set.\n    * @param {T} value Required. The value of the element to add to this Set.\n    * @returns {HashSet} The Set object.\n    */\n    public addAll(values: Iterable<T>): HashSet<T> {\n        for(let value of values) {\n            this.add(value);\n        }\n        return this;\n    }\n    \n    /**\n    * Removes all elements from this Set.\n    */\n    public clear(): void {\n        this.map.clear();\n    }\n    \n    /**\n    * Removes the specified element from this Set.\n    * @param {T} value Required. The value of the element to remove from the Set\n    * object.\n    * @returns {boolean} true if an element in the Set object has been removed successfully;\n    * otherwise false.\n    */\n    public delete(value: T): boolean {\n        return this.map.delete(value);\n    }\n    \n    /**\n    * Returns a new Iterator object that contains an array of [value, value] for\n    * each element in this Set, in insertion order. For Set objects there is no\n    * key like in Map objects. However, to keep the API similar to the Map object,\n    * each entry has the same value for its key and value here, so that an array \n    * [value, value] is returned.\n    * @returns {Iterator<[T, T]>} A new Iterator object that contains an array of [value, value] for\n    * each element in this Set, in insertion order.\n    */\n    public entries(): Iterator<[T, T]> {\n        return this.map.entries();\n    }\n    \n    /**\n    * Executes a provided function once for each value in this Set, in insertion\n    * order.\n    * @param {(value1: T, value2: T, Set: HashSet<T>) => void} callback Function\n    * to execute for each element. \n    * \n    *     value1, value2\n    * \n    * The value contained in the the current position in this Set. The same value\n    * is passed for both arguments.\n    * \n    *     Set\n    * \n    * The Set object that's being traversed.\n    * @param {any?} thisArg Value to use as this when executing callback.\n    */\n    public forEach(callback: (value1: T, value2: T, Set: HashSet<T>) => void, thisArg?: any): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    \n    /**\n    * Returns a boolean indicating whether an element with the specified value\n    * exists in a Set object or not.\n    * @param {T} value Required. The value to test for presence in this Set.\n    * @returns {boolean} Returns true if an element with the specified value exists in the Set object; otherwise false.\n    */\n    public has(value: T): boolean {\n        return this.map.has(value); \n    }\n    \n    /**\n    * The values() method returns a new Iterator object that contains the values\n    * for each element in this Set object in no particular order. \n    * \n    * The keys() method is an alias for this method (for similarity with Map objects);\n    * it behaves exactly the same and returns values of Set elements.\n    * @returns {Iterator<T>} A new Iterator object containing the values for each\n    * element in this Set, in no particular order.\n    */\n    public keys(): Iterator<T> {\n        return this.map.keys();\n    }\n    \n    /**\n    * The keys() method returns a new Iterator object that contains the values\n    * for each element in this Set object in no particular order.\n    * \n    * The values() method is an alias for this method (for similarity with Map objects);\n    * it behaves exactly the same and returns values of Set elements.\n    * @returns {Iterator<T>} A new Iterator object containing the values for each\n    * element in this Set, in no particular order. \n    */\n    public values(): Iterator<T> {\n        return this.map.values();\n    }\n    \n    /**\n    * The initial value of the @@iterator property is the same function object\n    * as the initial value of the values property. \n    * @returns {Iterator<T>} The Set iterator function, which is the values()\n    * function by default. \n    */\n    [Symbol.iterator](): Iterator<T> {\n        return this.values();\n    }\n}","import { Color, Point } from './Pixel';\nimport { Observable } from './Observable';\n\nexport abstract class Mosaic extends Observable {\n    private width: number;\n    private height: number;\n\n    /**\n     * Construct an empty mosaic with given height and width in pixels\n     * @param width width in pixels\n     * @param height height in pixels\n     */\n    public constructor(width: number, height: number) {\n        super();\n        this.width = width;\n        this.height = height;\n    }\n\n    /**\n     * Add a pixel with this color to the mosaic. Also sets changed to true if the\n     * pixel was added successfully.\n     * @param tile Color of the pixel to add\n     * @returns true if the pixel was added successfully. False otherwise.\n     */\n    abstract addTile(tile: Color): boolean;\n    abstract getColorAt(x: number, y: number): Color;\n    abstract isSet(x: number, y: number): boolean;\n    abstract isOnBoundary(x: number, y: number): boolean;\n    abstract allPoints(): Iterable<Point>;\n\n    /**\n     * @returns The width in pixels\n     */\n    public getWidth(): number {\n        return this.width;\n    }\n\n    /**\n     * @returns The width in pixels\n     */\n    public getHeight(): number {\n        return this.height;\n    }\n}","export interface Observer {\n    update(o: Observable, arg: any): void;\n}\n\nexport class Observable {\n    private observers: Set<Observer>;\n    private isChanged: boolean;\n\n    /**\n     * Construct an Observable with zero Observers.\n     */\n    public constructor() {\n        this.observers = new Set<Observer>();\n    }\n\n    /**\n     * Adds an observer to the set of observers for this object, provided that \n     * it is not the same as some observer already in the set.\n     * @param o an observer to be added. \n     */\n    public addObserver(o: Observer): void {\n        this.observers.add(o);\n    }\n\n    /**\n     * Tests if this object has changed.\n     * @returns true if and only if the setChanged method has been called more \n     * recently than the clearChanged method on this object; false otherwise.\n     */\n    public hasChanged(): boolean {\n        return this.isChanged;\n    }\n\n    /**\n     * Marks this Observable object as having been changed; the hasChanged method\n     * will now return true.\n     */\n    protected setChanged(): void {\n        this.isChanged = true;\n    }\n\n    /**\n     * Indicates that this object has no longer changed, or that it has already \n     * notified all of its observers of its most recent change, so that the hasChanged\n     * method will now return false. This method is called automatically by the\n     * notifyObservers methods.\n     */\n    protected clearChanged(): void {\n        this.isChanged = false;\n    }\n\n    /**\n     * If this object has changed, as indicated by the hasChanged method, then notify\n     * all of its observers and then call the clearChanged method to indicate that\n     * this object has no longer changed.\n     * \n     * Each observer has its update method called with two arguments: this observable\n     * object and the arg argument.\n     * @param arg any object.\n     */\n    public notifyObservers(arg?: any): void {\n        for(let observer of this.observers) {\n            observer.update(this, arg);\n        }\n        this.clearChanged();\n    }\n\n}","import { Hashable } from './HashMap';\n\n/**\n * Represents an RGBA color\n */\nexport class Color implements Hashable {\n    private r: number;\n    private g: number;\n    private b: number;\n    private a: number;\n\n    /**\n     * Constructs an RGBA color object.\n     * @param {number?} r An integer in the range [0, 255]\n     * @param {number?} g An integer in the range [0, 255]\n     * @param {number?} b An integer in the range [0, 255]\n     * @param {number?} a A float in the range [0, 1] \n     */\n    public constructor(r?: number, g?: number, b?: number, a?: number) {\n        this.r = r !== undefined ? r : 0;\n        this.g = g !== undefined ? g : 0;\n        this.b = b !== undefined ? b : 0;\n        this.a = a !== undefined ? a : 1;\n    }\n\n    public getR(): number {\n        return this.r;\n    }\n\n    public getG(): number {\n        return this.g;\n    }\n\n    public getB(): number {\n        return this.b;\n    }\n\n    public getA(): number {\n        return this.a;\n    }\n\n    /**\n     * Gets the color as a string of the form rgba(r,g,b,a)\n     */\n    public getRgba(): string {\n        return 'rgba(' + this.r + ',' + this.b + ',' + this.g + ',' + this.a + ')';\n    }\n\n    public equals(obj: any): boolean {\n        if(!(obj instanceof Color)) {\n            return false;\n        }\n        return this.r == obj.r && this.g == obj.g && this.b == obj.b && this.a == obj.a;\n    }\n\n    public hashString(): string {\n        return this.r + ',' + this.g + ',' + this.b + ',' + this.a;\n    }\n\n    public static readonly blank = new Color(0,0,0,0);\n}\n\n/**\n * Represents a point on the screen\n */\nexport class Point implements Hashable{\n    private x: number;\n    private y: number;\n   \n    /**\n     * Constructs a point object\n     * @param {number?} x An integer\n     * @param {number?} y An integer\n     */\n    public constructor(x?: number, y?: number) {\n        this.x = x || 0;\n        this.y = y || 0;\n    }\n\n    public getX(): number {\n        return this.x;\n    }\n\n    public getY(): number {\n        return this.y;\n    }\n\n    public equals(obj: any): boolean {\n        if(!(obj instanceof Point)) {\n            return false;\n        }\n        return Math.abs(this.x - obj.x) < 0.00001 && Math.abs(this.y - obj.y) < 0.00001;\n    }\n\n    public hashString(): string {\n        return this.x.toPrecision(10) + ',' + this.y.toPrecision(10);\n    }\n}\n\nexport class Pixel {\n    private position: Point;\n    private color: Color;\n\n    public constructor(position: Point, color: Color) {\n        this.position = position;\n        this.color = color;\n    }\n\n    public getPosition(): Point {\n        return this.position;\n    }\n\n    public getColor(): Color {\n        return this.color;\n    }\n}","import { Grid } from './Grid';\nimport { Color, Point } from './Pixel';\nimport { HashSet } from './HashSet';\nimport { Mosaic } from './Mosaic';\n\nexport abstract class SimpleMosaic extends Mosaic {\n    private grid: Grid;\n    private boundary: HashSet<Point>;\n\n    public constructor(grid: Grid, seed: Iterable<Point>) {\n        super(grid.getWidth(), grid.getHeight());\n\n        this.grid = grid;\n        \n        this.boundary = new HashSet<Point>();\n        this.boundary.addAll(seed);\n    }\n    \n    public addTile(color: Color): boolean {\n        let self_ = this;\n        \n        function colorDistance(color1: Color, color2: Color): number {\n            return Math.pow(color1.getR() - color2.getR(), 2) + Math.pow(color1.getG() - color2.getG(), 2)\n            + Math.pow(color1.getB() - color2.getB(), 2);\n        }\n        \n        function similarity(x: number, y: number): number {\n            let neighbors = self_.grid.getNeighborsOf(x, y)\n\n            let minDistance = Number.POSITIVE_INFINITY;\n            for(let neighbor of neighbors) {\n                if(self_.grid.isSet(neighbor.getX(), neighbor.getY())) {\n                    let distance = colorDistance(color, self_.grid.getColorAt(neighbor.getX(), neighbor.getY()));\n                    minDistance = Math.min(minDistance, distance);\n                }\n            }\n\n            if(!Number.isFinite(minDistance)) return 0;\n            else return minDistance;\n        }\n        \n        function findBestPoint(): Point {\n            let minSimilarity = Number.POSITIVE_INFINITY;\n            let bestPoint: Point;\n            for(let point of self_.boundary) {\n                let sim = similarity(point.getX(), point.getY());\n                if(sim < minSimilarity) {\n                    minSimilarity = sim;\n                    bestPoint = point;\n                }\n            }\n            return bestPoint;\n        }\n\n        function updateBoundary(point: Point) {\n            self_.boundary.delete(point);\n            let neighbors = self_.grid.getNeighborsOf(point.getX(), point.getY());\n            for(let neighbor of neighbors) {\n                if(!self_.grid.isSet(neighbor.getX(), neighbor.getY())) {\n                    self_.boundary.add(neighbor);\n                }\n            }\n        }\n        \n        let bestPoint = findBestPoint();\n        if(!bestPoint) return false;\n        updateBoundary(bestPoint);\n        this.grid.setColorAt(bestPoint.getX(), bestPoint.getY(), color);\n        this.setChanged();\n        return true;\n    }\n    \n    public getColorAt(x: number, y: number): Color {\n        return this.grid.getColorAt(x, y);\n    }\n\n    public isSet(x: number, y: number): boolean {\n        return this.grid.isSet(x, y);\n    }\n\n    public isOnBoundary(x: number, y: number): boolean {\n        return this.boundary.has(new Point(x, y));\n    }\n\n    public allPoints(): Iterable<Point> {\n        return this.grid.getAllPoints();\n    }\n}","import { SimpleMosaic } from \"./SimpleMosaic\";\nimport { SquareGrid } from \"./SquareGrid\";\nimport { Point } from \"./Pixel\";\n\nexport class SimpleSquareMosaic extends SimpleMosaic {\n    constructor(width: number, height: number) {\n        let grid = new SquareGrid(width, height);\n        super(grid, [new Point(Math.floor(width / 2), Math.floor(height / 2))]);\n    }\n}","import { Point, Color } from './Pixel';\nimport { Grid } from './Grid';\n\nexport class SquareGrid implements Grid {\n    private width: number;\n    private height: number;\n\n    private grid: Array<Array<Color>>;\n    private allpts: Array<Point>;\n\n    public constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n\n        this.grid = new Array<Array<Color>>();\n        this.allpts = new Array<Point>();\n        for(let i = 0; i < height; i++) {\n            this.grid[i] = new Array<Color>();\n            for(let j = 0; j < width; j++) {\n                this.grid[i][j] = Color.blank;\n                this.allpts.push(new Point(j, i));\n            }\n        }\n    }\n\n    setColorAt(x: number, y: number, color: Color): void {\n        this.grid[y][x] = color;\n    }    \n    \n    getColorAt(x: number, y: number): Color {\n        return this.grid[y][x];\n    }\n\n    isSet(x: number, y: number): boolean {\n        return !this.grid[y][x].equals(Color.blank); \n    }\n\n    getNeighborsOf(x: number, y: number): Iterable<Point> {\n        let neighbors = new Array<Point>();\n        neighbors.push(new Point(x - 1, y - 1));\n        neighbors.push(new Point(x - 1, y));\n        neighbors.push(new Point(x - 1, y + 1));\n        neighbors.push(new Point(x, y - 1));\n        neighbors.push(new Point(x, y + 1));\n        neighbors.push(new Point(x + 1, y - 1));\n        neighbors.push(new Point(x + 1, y));\n        neighbors.push(new Point(x + 1, y + 1));\n\n        let self_ = this;\n        return neighbors.filter((point) => {\n            return 0 <= point.getX() && point.getX() < self_.width \n                && 0 <= point.getY() && point.getY() < self_.height;\n        });\n    }\n\n    getAllPoints(): Iterable<Point> {\n        return this.allpts;\n    }\n    \n    getWidth(): number {\n        return this.width;\n    }\n    \n    getHeight(): number {\n        return this.height;\n    }\n}","import {SimpleAnimationController} from './controllers/SimpleAnimationController';\n\nlet cont = new SimpleAnimationController();\ncont.init();\ncont.start();","import * as THREE from 'three';\nimport { HashMap } from '../core/HashMap';\nimport { Point, Pixel } from '../core/Pixel';\n\nexport class VoronoiHelper extends THREE.Object3D {\n    public constructor(pixels: Array<Pixel>, offsets: HashMap<Point, THREE.Vector2>, radius?: number, segments?: number) {\n        super();\n        var instances = pixels.length;\n        var radius_ = radius || 1;\n        var segments_ = segments || 16;\n        \n        var offsets_ = [];\n        var colors = [];\n        \n        // instanced attributes\n        for ( var i = 0; i < instances; i ++ ) {\n            // offsets\n            let position = pixels[i].getPosition();\n            let x = position.getX();\n            let y = position.getY();\n            offsets_.push( x + offsets.get(position).x, 0, y + offsets.get(position).y );\n            // colors\n            colors.push( pixels[i].getColor().getR() / 255.0,\n            pixels[i].getColor().getG() / 255.0,\n            pixels[i].getColor().getB() / 255.0, 1.0 );\n        }\n        \n        var coneGeometry = new THREE.ConeBufferGeometry(radius_, radius_ * 2, segments_);\n        \n        var geometry = new THREE.InstancedBufferGeometry();\n        geometry.index = coneGeometry.index;\n        geometry.attributes = coneGeometry.attributes;\n        geometry.maxInstancedCount = instances; \n        geometry.addAttribute( 'offset', new THREE.InstancedBufferAttribute( new Float32Array( offsets_ ), 3 ) );\n        geometry.addAttribute( 'color', new THREE.InstancedBufferAttribute( new Float32Array( colors ), 4 ) );\n        \n        var material = new THREE.RawShaderMaterial( {\n            vertexShader: VoronoiHelper.vertexShader,\n            fragmentShader: VoronoiHelper.fragmentShader,\n        } );\n        \n        var mesh = new THREE.Mesh( geometry, material );\n\n        this.add(mesh);\n    }\n    \n    private static readonly vertexShader = `\n    precision highp float;\n    \n    uniform float sineTime;\n    \n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    \n    attribute vec3 position;\n    attribute vec3 offset;\n    attribute vec4 color;\n    \n    varying vec3 vPosition;\n    varying vec4 vColor;\n    \n    void main(){\n        vPosition = offset + position;\n        vColor = color;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( vPosition, 1.0 );\n    } \n    `;\n    \n    private static readonly fragmentShader = `\n    precision highp float;\n    \n    varying vec4 vColor;\n    \n    void main() {\n        gl_FragColor = vColor;\n    }\n    `;\n}","module.exports = React;","module.exports = ReactDOM;","module.exports = THREE;"],"sourceRoot":""}